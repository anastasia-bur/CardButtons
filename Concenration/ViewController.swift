//
//  ViewController.swift
//  Concenration
//
//  Created by –ê–Ω–∞—Å—Ç–∞—Å–∏—è on 05.02.2021.
//  Copyright ¬© 2021 Nasty. All rights reserved.
//

import UIKit

class ViewController: UIViewController {

   lazy var game = ConcentrationGame(numberOfPairsOfCards: (buttonCollection.count + 1) / 2) //—Å–æ–∑–¥–∞–ª–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞. –∑–∞–ø–æ–ª–Ω–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –∫–æ–ª-–≤–æ–º –ø–∞—Ä–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
 var touches = 0 { //–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –∫-–∞—è –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Ä–∞–≤–Ω–∞ 0
            didSet { // –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å,–∫-—ã–π –¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É –æ–±–Ω–æ–≤–∏—Ç—å—Å—è —Ç–µ–∫—Å—Ç—É
            touchLabel.text = "Touches: \(touches)" // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
            
        }
    }
    var emojiCollection = ["üêô","üê≥","üê†","üêã","ü¶à","ü¶ë","ü¶û","ü¶ê","ü¶Ä","üê°"] // —Å–æ–∑–¥–∞–ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é –µ–º–æ–¥–∑–∏
    
    var emojiDictionary = [Int:String]() //–≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö —É–∫–∞–∑–∞–Ω —Ç–∏–ø –∫–ª—é—á–∞, –≤ –∫-–æ–º –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –Ω–∞—à–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–ª—é—á–∞ –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ä—Ç–æ—á–µ–∫. –ø–æ—Å–ª–µ : —É–∫–∞–∑–∞ —Ç–∏–ø –∑–Ω–∞—á–µ–Ω–∏—è, –∫-–æ–µ –º—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å
    
    func emojiIdentifier(for card: Card) -> String {
        if emojiDictionary[card.identifier] == nil {
            emojiDictionary [card.identifier] = emojiCollection.remove(at: emojiCollection.count.acr4randomExtension)
        }
        return emojiDictionary[card.identifier] ?? "?"
    }
    
    
    func updateViewFromModel() {
        for index in buttonCollection.indices {
            let button = buttonCollection[index]
            let card = game.cards[index]
            if card.isFaceUp {
                button.setTitle(emojiIdentifier(for: card), for: .normal)
                button.backgroundColor = #colorLiteral(red: 1.0, green: 1.0, blue: 1.0, alpha: 1.0)
            } else {
                button.setTitle("", for: .normal)
                button.backgroundColor = card.isMathed ? #colorLiteral(red: 1, green: 1, blue: 1, alpha: 0) : #colorLiteral(red: 0.199295342, green: 0.8115466237, blue: 0.3556014299, alpha: 1) // —Å–æ–∑–¥–∞–ª–∏ —Ñ-—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ : —ç–º–æ–¥–∑–∏ –∏ –∫–Ω–æ–ø–∫—É –∏ –ø—Ä–æ–ø–∏—Å–∞–ª–∏ –ª–æ–≥–∏–∫—É –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
                // –∫–æ–≥–¥–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ –µ—Å—Ç—å —ç–º–æ–¥–∑–∏, —Ç–æ –µ–≥–æ –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å, —Ç–æ –µ—Å—Ç—å —Å—Ç–µ—Ä–µ—Ç—å —Ç–µ–∫—Å—Ç –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∏ —Ñ–æ–Ω —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏ —Å–¥–µ–ª–∞—Ç—å –∑–µ–ª–µ–Ω—ã–º, –Ω–æ –µ—Å–ª–∏ —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏ –∑–µ–ª–µ–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –∏ –Ω–µ—Ç —ç–º–æ–¥–∑–∏, –∞ –º—ã –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É, —Ç–æ –º—ã —Ñ–æ–Ω —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—è–µ–º –Ω–∞ –±–µ–ª—ã–π —Ü–≤–µ—Ç –∏ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –≤—Å—Ç–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏
            }
        }
        
        
        
    }
    
    
    
    

    
    @IBOutlet var buttonCollection: [UIButton]! //–ø—Ä–∏–∫–æ–Ω–µ–∫—Ç–∏–ª–∏ –∫–æ–ª–ª–µ–∫—Ü–∏—é –∫–Ω–æ–ø–æ–∫ –∫–∞—Ä—Ç–æ—á–µ–∫
    @IBOutlet weak var touchLabel: UILabel! //–ø—Ä–∏–∫–æ–Ω–µ–∫—Ç–∏–ª–∏ —è—Ä–ª—ã–∫, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –∫–æ–ª-–≤–æ –Ω–∞–∂–∞—Ç–∏–π
    @IBAction func buttonAction(_ sender: UIButton) { // –ø—Ä–∏–∫–æ–Ω–µ–∫—Ç–∏–ª–∏ –∫–Ω–æ–ø–∫–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
         touches += 1 // –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å—Å—è –Ω–∞ 1
   let transformAnim  = CAKeyframeAnimation(keyPath:"transform")
   transformAnim.values  = [NSValue(caTransform3D: CATransform3DMakeRotation(0.04, 0.0, 0.0, 1.0)),NSValue(caTransform3D: CATransform3DMakeRotation(-0.04 , 0, 0, 1))]
   transformAnim.autoreverses = true
   transformAnim.duration  = 0.125
   transformAnim.repeatCount = Float.infinity
        sender.layer.add(transformAnim, forKey: "shake")
        if let buttonIndex = buttonCollection.firstIndex(of: sender) { // –∏–Ω–¥–µ–∫—Å—ã –∫–Ω–æ–ø–æ–∫ –≤ –∫–æ–ª–µ–∫—Ü–∏–∏/–ø—Ä–æ–ø–∏—Å–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫/–≤—ã–∑–≤–∞–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä if –∏ –µ—Å–ª–∏ –º—ã –º–æ–∂–µ–º –ø—Ä–∏—Å–≤–æ–∏—Ç—å –≤—Å–µ –∏–Ω–¥–µ–∫—Å—ã, —Ç–æ –º—ã –≤—Å–µ –≤—ã–ø–æ–ª–Ω–∏–º, –µ—Å–ª–∏ —á–µ–≥–æ-–≥–æ –Ω–µ—Ç, —Ç–æ –Ω–µ—Ç
          game.chooseCard(at: buttonIndex)
            updateViewFromModel()
        }
        
    }

}

extension Int {
    var acr4randomExtension : Int {
        return Int(arc4random_uniform(UInt32(self)))
    }

}

